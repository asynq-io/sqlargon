[tool.poetry]
name = "sqlargon"
version = "0.3.0"
description = "SQLAlchemy utils for Postgres and Sqlite"
readme = "README.md"
authors = [
    "Radzim Kowalow <radzim.kowalow@performance-media.pl>"
]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
alembic = "^1.13.1"
asyncpg = "^0.29.0"
aiosqlite = "^0.19.0"
sqlalchemy = ">2.0,<3"
pydantic = ">=2.0,<3"
pydantic-settings = "^2.1.0"
orjson = {version = "*", optional = true}
opentelemetry-instrumentation-sqlalchemy = {version = "*", optional = true}

[tool.poetry.extras]
all = ["orjson", "opentelemetry-instrumentation-sqlalchemy"]
orjson = ["orjson"]
opentelemetry = ["opentelemetry-instrumentation-sqlalchemy"]

[tool.poetry.group.dev.dependencies]
ruff = "==0.1.13"
mypy = "^1.2.0"
deptry = "^0.12.0"
bandit = "^1.7.4"
python-semantic-release = "^7.33.2"
greenlet = {version = "^3.0.3", platform = "arm64"}

[tool.poetry.group.test.dependencies]
pytest = "^7.2.1"
pytest-asyncio = "^0.20.2"
pytest-cov = "^4.0.0"
pytest-sugar = "^0.9.7"
pytest-repeat = "^0.9.3"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
watchdog = ">=2.0,<4.0"
mkdocs-material = "^9.5.9"
mkdocs-autorefs = "^0.5.0"
mkdocs-gen-files = "^0.5.0"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}


[tool.pytest.ini_options]
addopts = "--cov=./sqlargon --count=3"
testpaths = [
   "./tests"
]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.9"
namespace_packages = true
ignore_missing_imports = true
no_site_packages = true


[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "raise NotImplementedError"
]

[tool.ruff]
target-version = "py39"

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
    "SIM", # flake8-simplify
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "E501", # line too long
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = true
docstring-code-line-length = "dynamic"
line-ending = "auto"

[tool.ruff.mccabe]
max-complexity = 8

[tool.deptry.per_rule_ignores]
DEP002 = ["alembic", "asyncpg", "aiosqlite"]
DEP003 = ["sqlargon", "typing_extensions", "pydantic_core"]


[tool.semantic_release]
version_variable = [
    'sqlargon/_version.py:__version__',
]
version_toml = 'pyproject.toml:tool.poetry.version'
version_pattern = [
    'docs/index.md:Version: (\d+\.\d+\.\d+)',
    'README.md:Version: (\d+\.\d+\.\d+)'
]
upload_to_repository = false
major_on_zero = true
hvcs = "github"
commit_message = "Bump version: {version}"
tag_commit = false


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
